{"version":3,"sources":["tools/calcRank.ts","images/azito/office.jpg","class/Jinsai.ts","icons/Graduated.tsx","icons/HeartBroken.tsx","icons/HeartDoubt.tsx","icons/Loyal.tsx","Property.tsx","JinsaiBlock.tsx","contexts/ContextHelper.tsx","contexts/CacheState.ts","class/Skill.ts","services/jinsaiService.ts","class/Recident.ts","class/Shop.ts","contexts/GameState.ts","services/shopService.ts","services/recidenceService.ts","Azito.tsx","components/Confirm.tsx","Interview.tsx","tools/translate.ts","Human.tsx","RollingNews.tsx","Frame.tsx","services/findWorkService.ts","FindWork.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Rank","RankColor","Loyal","max","S","Jinsai","name","_tec","_exp","_mental","_salary","state","loyal","level4","offered","status","skills","this","forEach","skill","init","tec","exp","mental","Graduated","props","version","baseProfile","xmlns","width","height","viewBox","preserveAspectRatio","style","transform","paddingTop","d","strokeWidth","stroke","fill","x1","y1","x2","y2","HeartBroken","HeartDoubt","x","y","fontSize","textAnchor","dominant-baseline","fontWeight","color","Property","rank","Math","floor","value","nextValue","step1","step2","nextRank","className","data-rank","data-next-rank","JinsaiBlock","onClick","jinsai","level3","level0","nextData","map","index","contextHelper","reducerMap","initState","stateName","dispatchName","createContext","useReducer","action","type","payload","reducerMapToReducer","dispatch","changPage","page","produce","draft","setCurJinsai","curJinsai","test","CacheStateContext","useCacheState","SkillImpl","turn","passive","SkillList","description","func","jinsais","self","draftState","find","j","familyName","firstName","randomProperty","random","JinsaiData","createJinsai","length","undefined","Set","i","add","Array","from","randomSkills","isSkill","req","Boolean","isRequireState","isRequireProp","_req","RequireType","Recident","requirements","timeLimit","timeLeft","working","Good","price","effect","GoodList","buyMaxTp","money","maxTp","buyDesk","desks","buyProfile","profiles","push","buy","good","left","shop","get","set","console","error","setJinsais","setProfiles","setRecident","recident","goScene","indexOf","slice","setMoney","updataJinsai","data","useTp","tp","Map","createShop","requirs","size","key","require","reverse","values","createRecidence","GameStateContext","useGameState","Azito","cacheStateDispatch","useContext","gameState","useState","disappearing","setDisappearing","changePage","setTimeout","handleJinsaiClick","data-content","Confirm","handleYes","onYes","setState","show","window","parent","remove","handleNo","onNo","componentDidMount","context","alert","Component","$confirm","document","createElement","body","append","ReactDOM","render","React","Interview","gameStateDispatch","profile","delay","dict","translate","word","Human","cacheState","setNextValue","handleShusong","shusong","order","orders","satisfy","condition","updateJinsaiDate","gift","giveGift","overWorkClick","work","next","hard","puaClick","rand","pua","sort","a","b","quatity","goodClick","title","RollingNews","news","curIndex","setCurIndex","useEffect","interval","setInterval","clearInterval","Frame","src","background","alt","Work","rewardRank","present","target","createWork","FindWork","workCursor","jinsaisCopy","works","BaiZi","TengBen","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enableMapSet","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d1afd71.chunk.js","sourcesContent":["export enum Rank {\n  'D',\n  'D+',\n  'C',\n  'C+',\n  'B',\n  'B+',\n  'A',\n  'A+',\n  'S',\n  'S+'\n}\nexport enum RankColor {\n  'purple',\n  'blue',\n  'gold',\n  'orange',\n  'red',\n}","export default __webpack_public_path__ + \"static/media/office.2d77ae5c.jpg\";","import { Work } from \"../services/findWorkService\";\r\nimport { Rank } from \"../tools/calcRank\";\r\nimport { Good } from \"./Shop\";\r\nimport { Skill } from \"./Skill\";\r\n\r\nconst max = (Rank.S + 1) * 1024 - 1;\r\n\r\nexport interface JinsaiState {\r\n  loyal: Loyal;\r\n  offered: boolean;\r\n  status: 'graduate' | 'astable' | 'offered' | 'usual';\r\n}\r\n\r\nexport enum Loyal {\r\n  'level0',\r\n  'level1',\r\n  'level2',\r\n  'level3',\r\n  'level4',\r\n}\r\n\r\nexport class Jinsai {\r\n  // public skills: [Skill?, Skill?, Skill?] = [];\r\n  constructor(\r\n    public name: string,\r\n    public _tec: number,\r\n    public _exp: number,\r\n    public _mental: number,\r\n    public _salary: number,\r\n    public state: JinsaiState = {\r\n      loyal: Loyal.level4,\r\n      offered: false,\r\n      status: 'usual'\r\n    },\r\n    public skills: Skill[] = [],\r\n  ) {\r\n\r\n  }\r\n  // public pua() {\r\n  //   const rand = Math.floor(Math.random() * 3);\r\n  //   switch(rand) {\r\n  //     case 0:\r\n  //       this._tec += Math.floor(Math.random() * 200);\r\n  //       break;\r\n  //     case 1:\r\n  //       this._exp += Math.floor(Math.random() * 200);\r\n  //       break;\r\n  //     case 2:\r\n  //       this._mental += Math.floor(Math.random() * 200);\r\n  //       break;\r\n  //   }\r\n  // }\r\n  // public giveGift(gift: Good) {\r\n  //   gift.effect(this);\r\n  // }\r\n  // public giveMoney() {\r\n  //   if (this.state.loyal < Loyal.level4) {\r\n  //     this.state.loyal += 1;\r\n  //   }\r\n  // }\r\n  // public work(work?: Work) {\r\n  //   const next = this.state.loyal - 1;\r\n  //   const hard = work ? work.hard : 200;\r\n  //   if (this.state.loyal > Loyal.level0) {\r\n  //     this.state.loyal = next;\r\n  //   }\r\n  //   this._mental -= Math.floor(Math.random() * hard);\r\n  //   this._exp += Math.floor(Math.random() * hard);\r\n  //   this._tec += Math.floor((Math.random() - 0.7) * hard);\r\n  // }\r\n  public get tec() {\r\n    let _tec = this._tec;\r\n    this.skills.forEach(skill => {\r\n      if (skill) {\r\n        _tec += skill.init.tec;\r\n      }\r\n    })\r\n    if (_tec > max) {\r\n      _tec = max;\r\n    }\r\n    return _tec;\r\n  }\r\n  public get exp() {\r\n    let _exp = this._exp;\r\n    this.skills.forEach(skill => {\r\n      if (skill) {\r\n        _exp += skill.init.exp;\r\n      }\r\n    })\r\n    if (_exp > max) {\r\n      _exp = max;\r\n    }\r\n    return _exp;\r\n  }\r\n  public get mental() {\r\n    let _mental = this._mental;\r\n    this.skills.forEach(skill => {\r\n      if (skill) {\r\n        _mental += skill.init.mental;\r\n      }\r\n    })\r\n    if (_mental > max) {\r\n      _mental = max;\r\n    }\r\n    return _mental;\r\n  }\r\n}\r\n","interface Props {\n  width?: string;\n  height?: string;\n}\n\nexport function Graduated(props: Props) {\n  return (\n    <svg version=\"1.1\"\n      baseProfile=\"full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={props.width || '100%'}\n      height={props.height || '100%'}\n      viewBox=\"0 0 40 40\"\n      preserveAspectRatio=\"xMinYMin meet\"\n      style={{\n        transform: 'scale(1.2)',\n        paddingTop: '10%',\n      }}>\n        <path\n      d=\"\n        M12 10\n        L20 15\n        L28 10\n        L28 25\n        L20 30\n        L12 25\n        L12 10\n      \"\n      strokeWidth=\"2\"\n      stroke=\"black\"\n      fill=\"none\"\n    ></path>\n    <path\n      d=\"\n        M20 16\n        L27 11\n        L27 24\n        L20 29\n      \"\n      strokeWidth=\"0\"\n      fill=\"lightgreen\"\n    ></path>\n    <path\n      d=\"\n        M13 11\n        L20 16\n        L20 29\n        L13 24\n        L13 11\n      \"\n      strokeWidth=\"0\"\n      fill=\"yellow\"\n    ></path>\n    <line x1=\"20\" y1=\"15\" x2=\"20\" y2=\"29\" strokeWidth=\"1\" stroke=\"black\"/>\n    </svg>\n  )\n}\n","interface Props {\n  width?: string;\n  height?: string;\n  color?: string;\n}\n\nexport function HeartBroken(props: Props) {\n  return (\n    <svg version=\"1.1\"\n      baseProfile=\"full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={props.width || '100%'}\n      height={props.height || '100%'}\n      viewBox=\"-69 -16 138 138\"\n      preserveAspectRatio=\"xMinYMin meet\"\n      style={{\n        transform: 'scale(0.7)'\n      }}>\n        <path\n          stroke=\"black\"\n          d=\"\n            M0,12\n            C 50,-30 110,50  0,120\n            C-110,50 -50,-30 0,12z\n          \"\n          fill=\"rgb(191,42,42)\" />\n          <line x1=\"-69\" y1=\"-16\" x2=\"69\" y2=\"122\" stroke=\"black\" strokeWidth=\"3\"></line>\n          <line x1=\"-69\" y1=\"122\" x2=\"69\" y2=\"-16\" stroke=\"black\" strokeWidth=\"3\"></line>\n    </svg>\n  )\n}\n","interface Props {\n  width?: string;\n  height?: string;\n  color?: string;\n}\n\nexport function HeartDoubt(props: Props) {\n  return (\n    <svg version=\"1.1\"\n      baseProfile=\"full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={props.width || '100%'}\n      height={props.height || '100%'}\n      viewBox=\"-69 -16 138 138\"\n      preserveAspectRatio=\"xMinYMin meet\"\n      style={{\n        transform: 'scale(0.7)'\n      }}>\n        <path\n          stroke=\"black\"\n          d=\"\n            M0,12\n            C 50,-30 110,50  0,120\n            C-110,50 -50,-30 0,12z\n          \"\n          fill=\"yellow\" />\n        <text x=\"0\" y=\"61\" fontSize=\"88\" textAnchor=\"middle\" dominant-baseline=\"middle\" fontWeight=\"bold\" stroke=\"red\">?</text>\n    </svg>\n  )\n}\n","interface Props {\n  width?: string;\n  height?: string;\n  color?: string;\n}\n\nexport function Loyal(props: Props) {\n  return (\n    <svg version=\"1.1\"\n      baseProfile=\"full\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={props.width || '100%'}\n      height={props.height || '100%'}\n      viewBox=\"-69 -16 138 138\"\n      preserveAspectRatio=\"xMinYMin meet\"\n      style={{\n        transform: 'scale(0.7)'\n      }}>\n        <path\n          stroke=\"black\"\n          d=\"\n            M0,12\n            C 50,-30 110,50  0,120\n            C-110,50 -50,-30 0,12z\n          \"\n          fill={props.color}/>\n    </svg>\n  )\n}\n","import { CSSProperties, FunctionComponent } from \"react\";\nimport './Property.scss';\nimport { Rank, RankColor } from \"./tools/calcRank\";\n\ninterface JinsaiStyle extends CSSProperties{\n  '--percent'?: string;\n  '--color'?: string;\n  '--step1'?: string;\n  '--step2'?: string;\n  '--next'?: string;\n  '--next-color'?: string;\n}\n\nexport const Property: FunctionComponent<{\n  name: string;\n  value: number;\n  nextValue?: number;\n}> = (props) => {\n  const rank = Math.floor(props.value / 1024);\n  const nextValue = props.nextValue || props.value;\n  function calcStep() {\n    if (Math.floor(nextValue / 1024) === Math.floor(props.value / 1024)) {\n      return [nextValue, nextValue];\n    }\n    if (nextValue - props.value > 0) {\n      return [1023, 0];\n    }\n    return [0, 1023];\n  }\n  const [step1, step2] = calcStep();\n  const nextRank = Math.floor(nextValue / 1024);\n  return (\n    <div className=\"property\" style={{\n      '--color': RankColor[Math.floor(rank/2)],\n      '--next-color': RankColor[Math.floor(nextRank/2)]\n    } as JinsaiStyle}>\n      <div className=\"row\">\n        <div className=\"property-name\">{props.name}</div>\n        <div\n          className={`rank ${rank !== nextRank && 'rank-change'}`}\n          data-rank={Rank[rank]}\n          data-next-rank={Rank[nextRank]}\n        ></div>\n        {/* <div className={`next-rank ${rank !== nextRank && 'rank-change'}`}>{Rank[nextRank]}</div> */}\n      </div>\n      <div\n        className={`progress ${nextValue - props.value && 'value-change'}`}\n        style={{\n          '--percent': (props.value%1024)/10.24+'%',\n          '--step1': (step1%1024)/10.24+'%',\n          '--step2': (step2%1024)/10.24+'%',\n          '--next': (nextValue%1024)/10.24+'%',\n        } as JinsaiStyle}\n        ></div>\n    </div>\n  );\n}","import { CSSProperties, Fragment, FunctionComponent } from \"react\";\nimport { Jinsai, Loyal } from \"./class/Jinsai\";\nimport { Graduated } from \"./icons/Graduated\";\nimport { HeartBroken } from \"./icons/HeartBroken\";\nimport { HeartDoubt } from \"./icons/HeartDoubt\";\nimport { Loyal as LoyalComponent } from \"./icons/Loyal\";\nimport './JinsaiBlock.scss';\nimport { Property } from \"./Property\";\n\ninterface JBStyle extends CSSProperties {\n  '--delay'?: string;\n  '--init-trans'?: string;\n}\n\nexport const JinsaiBlock: FunctionComponent<{\n  className?: string,\n  initTrans?: string,\n  jinsai: Jinsai,\n  onClick?: (jinsai?: Jinsai)=>void,\n  delay?: string\n  nextData?: Jinsai,\n}> = (props) => {\n  function handleOnClick() {\n    if (props.onClick) {\n      props.onClick(props.jinsai);\n    }\n  }\n  return (\n    <div\n      className={`jinsai-block ${props.className||''}`}\n      onClick={() => handleOnClick()}\n      >\n      <div className=\"card\">\n        <div className=\"name\">{props.jinsai.name}</div>\n        <div className=\"status\">\n          <div className=\"status-wrapper\">\n            {props.jinsai.state.offered && <HeartBroken ></HeartBroken>}\n          </div>\n          <div className=\"status-wrapper\">\n            {props.jinsai.state.status === 'graduate' && <Graduated ></Graduated>}\n            {props.jinsai.state.status === 'astable' && <HeartDoubt></HeartDoubt>}\n          </div>\n          <div className=\"status-wrapper\">\n            <LoyalComponent color={\n              props.jinsai.state.loyal > Loyal.level3 ? 'lightgreen'\n                : props.jinsai.state.loyal > Loyal.level0 ? 'yellow'\n                  : 'red'\n            }></LoyalComponent>\n          </div>\n        </div>\n        <Property name=\"技术\" value={props.jinsai.tec} nextValue={props.nextData?.tec}></Property>\n        <Property name=\"经验\" value={props.jinsai.exp} nextValue={props.nextData?.exp}></Property>\n        <Property name=\"精神\" value={props.jinsai.mental} nextValue={props.nextData?.mental}></Property>\n        {props.jinsai.skills.map((skill,index) => (\n          skill?<div className=\"skill\" key={skill.name+index}>{skill.name}</div>:<Fragment key={index}></Fragment>\n        ))}\n      </div>\n    </div>\n  )\n}","import { createContext, FC, useReducer, useContext } from \"react\";\n\nexport type ReducerMapToAction<ReduerMap, State> = {\n  [key in keyof ReduerMap]:\n    ReduerMap[key] extends (state: State) => State ?\n      {\n        type: key;\n        payload: never;\n      }\n      : ReduerMap[key] extends (state: State, payload: infer Payload) => State ?\n        {\n          type: key;\n          payload: Payload;\n        }\n        : never;\n}[keyof ReduerMap];\n\nexport type ActionMapToReducerMap<ActionMap, State> = {\n  // [key in keyof ActionMap]: ActionMap[key] extends never ?\n  //   (state: State) => State\n  //   : ActionMap[key] extends infer P ?\n  //     (state: State, payload: P) => State\n  //     : never;\n  [index in keyof ActionMap]: (state: State, payload: ActionMap[index]) => State;\n};\n\nexport type ActionMapToAction<ActionMap> = {\n  [index in keyof ActionMap]:\n    ActionMap[index] extends never ?\n      {\n        type: index;\n        payload?: never;\n      }\n      : {\n        type: index;\n        payload: ActionMap[index];\n      }\n}[keyof ActionMap]\n\nexport function reducerMapToReducer<ActionMap, State>(reducerMap: ActionMapToReducerMap<ActionMap, State>) {\n  return function (state: State, action: ActionMapToAction<ActionMap>) {\n    return (reducerMap[action.type])(state, action.payload!);\n  }\n}\n\ntype Name<\n  StateName extends string,\n  DispatchName extends string,\n  State,\n  Dispatch,\n> = {\n  [index in StateName | DispatchName]: index extends StateName ? State : Dispatch;\n}\n\nexport function contextHelper\n<ActionMap, State, StateName extends string = 'state', DispatchName extends string = 'dispatch'>\n(\n  reducerMap: ActionMapToReducerMap<ActionMap, State>,\n  initState: State,\n  stateName?: StateName,\n  dispatchName?: DispatchName,\n) {\n  const Context = createContext({\n    [stateName || 'state']: initState,\n    [dispatchName || 'dispatch']: (() => {}) as React.Dispatch<ActionMapToAction<ActionMap>>\n  } as Name<StateName, DispatchName, State, React.Dispatch<ActionMapToAction<ActionMap>>>);\n  const useContextHelper = () => {\n    const [state, dispatch] = useReducer(reducerMapToReducer(reducerMap), initState);\n    return {\n      [stateName || 'state']: state,\n      [dispatchName || 'dispatch']: dispatch,\n    } as Name<StateName, DispatchName, State, React.Dispatch<ActionMapToAction<ActionMap>>>;\n  }\n  return [Context, useContextHelper] as const;\n}\n\n// export class ContextHelper<ActionMap, State> {\n//   public state?: State;\n//   public dispatch?: React.Dispatch<ActionMapToAction<ActionMap>>;\n//   public Context?: React.Context<{\n//     state: State;\n//     dispatch: React.Dispatch<ActionMapToAction<ActionMap>>;\n//   }>;\n//   public Provider?: FC<{}> | JSX.IntrinsicAttributes;\n//   public useContext() {\n//     return useContext(this.Context!);\n//   }\n//   constructor(\n//     private reducer: (state: State, action: ActionMapToAction<ActionMap>) => State,\n//     private initState: State,\n//   ) {\n    \n//   }\n//   public useContextHelper() {\n//     const [state, dispatch] = useReducer(this.reducer, this.initState);\n//     const reducedState = {\n//       state,\n//       dispatch,\n//     }\n//     const Context = createContext(reducedState);\n//     const Provider: FC = (props) => {\n//       return <Context.Provider value={reducedState}>{props.children}</Context.Provider>\n//     }\n//     this.state = state;\n//     this.dispatch = dispatch;\n//     this.Context = Context;\n//     this.Provider = Provider;\n//   }\n// }\n\n","import produce from \"immer\";\nimport { createContext, useReducer } from \"react\";\nimport { Jinsai } from \"../class/Jinsai\";\nimport { ActionMapToReducerMap, contextHelper, reducerMapToReducer } from \"./ContextHelper\";\n\nexport type Page = 'consumables' | 'interview' | 'findwork' | 'status' | 'human';\n\ninterface CacheState {\n  page: Page;\n  curJinsai: Jinsai | null;\n  test: number;\n}\n\ninterface ActionMap {\n  changPage: Page;\n  setCurJinsai: Jinsai | null;\n  test: never;\n}\n\nconst reducerMap: ActionMapToReducerMap<ActionMap, CacheState> = {\n  changPage(state, page) {\n    return produce(state, (draft) => {\n      draft.page = page;\n    })\n  },\n  setCurJinsai(state, jinsai) {\n    return produce(state, (draft) => {\n      draft.curJinsai = jinsai;\n    })\n  },\n  test(state) {\n    return produce(state, draft => {\n      draft.test ++;\n    })\n  }\n}\n\n// const reducer = reducerMapToReducer(reducerMap);\nconst initState: CacheState = {\n  page: 'consumables',\n  curJinsai: null,\n  test: 0,\n}\n\n// const [state, dispatch] = useReducer(reducer, initState);\n\nexport const [CacheStateContext, useCacheState] = contextHelper(reducerMap, initState, 'cacheState', 'cacheStateDispatch');\n","import produce from \"immer\";\nimport { Jinsai } from \"./Jinsai\"\n\nexport interface Skill {\n  name: string;\n  init: {\n    tec: number;\n    exp: number;\n    mental: number;\n  };\n  turn: {\n    tec: number;\n    exp: number;\n    mental: number;\n  };\n  passive?: PassiveSkill;\n}\n\nexport interface PassiveSkill {\n  description: string;\n  func: (jinsais: Jinsai[], self: Jinsai) => Jinsai[];\n}\n\nclass SkillImpl implements Skill {\n  constructor(\n    public name: string,\n    public init: {\n      tec: number;\n      exp: number;\n      mental: number;\n    },\n    public turn: {\n      tec: number;\n      exp: number;\n      mental: number;\n    },\n    public passive?: PassiveSkill,\n  ) {\n\n  }\n}\n\nexport const SkillList = [\n  new SkillImpl(\n    '二次元',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 0},\n  ),\n  new SkillImpl(\n    '女装',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 0},\n    {\n      description: '每回合提升所有其他人才的精神200点',\n      func(jinsais, self) {\n        return produce(jinsais, (draftState) => {\n          draftState.forEach((jinsai) => {\n            if (jinsai.name !== self.name) {\n              jinsai.mental += 200;\n            }\n          });\n        })\n      }\n    }\n  ),\n  new SkillImpl(\n    '老油条',\n    {tec: 0, exp: 0, mental: 1000},\n    {tec: 0, exp: 0, mental: 0},\n    {\n      description: '每回合降低其他所有人才的精神200点',\n      func(jinsais, self) {\n        return produce(jinsais, (draftState) => {\n          draftState.forEach((jinsai) => {\n            if (jinsai.name !== self.name) {\n              jinsai.mental -= 200;\n            }\n          });\n        })\n      }\n    }\n  ),\n  new SkillImpl(\n    'ACMer',\n    {tec: 800, exp: 0, mental: 0},\n    {tec: 200, exp: 0, mental: -100},\n  ),\n  new SkillImpl(\n    '软件工程',\n    {tec: 0, exp: 1000, mental: 0},\n    {tec: 0, exp: 0, mental: 0},\n  ),\n  new SkillImpl(\n    '抗压',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 600},\n  ),\n  new SkillImpl(\n    '乐观主义',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 200},\n  ),\n  new SkillImpl(\n    '抑郁',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: -200},\n  ),\n  new SkillImpl(\n    '自驱动',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 500, exp: 0, mental: -100},\n  ),\n  new SkillImpl(\n    '管理经验',\n    {tec: 0, exp: 800, mental: -400},\n    {tec: 0, exp: 0, mental: 0},\n  ),\n  new SkillImpl(\n    '游戏玩家',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 0},\n  ),\n  new SkillImpl(\n    '已婚',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: -100},\n    {\n      description: '每回合忠诚度提升一个等级',\n      func(jinsais, self) {\n        return produce(jinsais, draftState => {\n          draftState.find(j => j.name === self.name)!.state.loyal += 1;\n        })\n      }\n    }\n  ),\n  new SkillImpl(\n    '设计天赋',\n    {tec: 0, exp: 0, mental: 0},\n    {tec: 0, exp: 0, mental: 0},\n  ),\n] as const;","import { Jinsai, Loyal } from \"../class/Jinsai\";\nimport { Good } from \"../class/Shop\";\nimport { Skill, SkillList } from \"../class/Skill\";\nimport { Work } from \"./findWorkService\";\n\nconst familyName = ['赵', '钱', '孙', '李', '周', '吴', '郑', '王', '冯', '陈', '褚', '卫', '蒋', '沈', '韩', '杨'];\nconst firstName = ['草莓', '蜜桃', '西瓜', '丝瓜', '雪糕', '蛋挞', '橙橙', '柠檬', '菠萝', '芦笋', '香蕉', '番茄'];\nfunction createName() {\n  return familyName[Math.floor(Math.random() * familyName.length)] + firstName[Math.floor(Math.random() * firstName.length)];\n}\nfunction randomProperty() {\n  return Math.floor(Math.random() * 5000);\n}\nfunction randomSkills() {\n  const skills: Set<Skill> = new Set();\n  for (let i = 0; i < 3; ++i) {\n    const skill = SkillList[Math.floor(Math.random() * (SkillList.length * 3))];\n    if (skill) {\n      skills.add(skill);\n    }\n  }\n  return Array.from(skills);\n}\n\nclass JinsaiData extends Jinsai {\n  constructor(jinsai: Jinsai) {\n    super(jinsai.name, jinsai._tec, jinsai._exp, jinsai._mental, jinsai._salary, jinsai.state, jinsai.skills);\n  }\n}\n\nexport function createJinsai() {\n  return new Jinsai(createName(), randomProperty(), randomProperty(), randomProperty(), randomProperty(), undefined, randomSkills());\n}\n\nexport function giveGift(jinsai: Jinsai, gift: Good) {\n  const data = new JinsaiData(jinsai);\n  gift.effect(data);\n  return data;\n}\nexport function giveMoney(jinsai: Jinsai) {\n  const data = new JinsaiData(jinsai);\n  if (data.state.loyal < Loyal.level4) {\n    data.state.loyal += 1;\n  }\n  return data;\n}\nexport function work(jinsai: Jinsai, work?: Work) {\n  const data = new JinsaiData(jinsai);\n  const next = data.state.loyal - 1;\n  const hard = work ? work.hard : 200;\n  if (data.state.loyal > Loyal.level0) {\n    data.state.loyal = next;\n  }\n  data._mental -= Math.floor(Math.random() * hard);\n  data._exp += Math.floor(Math.random() * hard);\n  data._tec += Math.floor((Math.random() - 0.7) * hard);\n  return data;\n}\n\nexport function pua(jinsai: Jinsai) {\n  const data = new JinsaiData(jinsai);\n  const rand = Math.floor(Math.random() * 3);\n  const value = Math.floor(Math.random() * 200);\n  switch(rand) {\n    case 0:\n      data._tec += value;\n      break;\n    case 1:\n      data._exp += value;\n      break;\n    case 2:\n      data._mental += value;\n      break;\n  }\n  return data;\n}\n","import { Jinsai, JinsaiState } from \"./Jinsai\";\nimport { Skill } from \"./Skill\";\n\ninterface RequireProp {\n  name: 'tec' | 'exp' | 'mental';\n  value: number;\n}\ninterface RequireState<T extends keyof JinsaiState = keyof JinsaiState> {\n  state: T;\n  value: JinsaiState[T];\n}\n\nexport function isSkill(req: Requirment['require']): req is Skill {\n  return Boolean((req as Skill).init);\n}\nexport function isRequireState(req: Requirment['require']): req is RequireState<'status'> {\n  return Boolean((req as RequireState).state);\n}\nexport function isRequireProp(req: Requirment['require']): req is RequireProp {\n  const _req = req as RequireProp;\n  return Boolean(_req.value && _req.name);\n}\n\nexport const RequireType = [\n  'tec',\n  'exp',\n  'mental',\n  'Loyal',\n  'graduate',\n  'astable',\n  'offered',\n  'usual',\n  'skill',\n] as const;\n\nexport interface Requirment {\n  require: Skill | RequireProp | RequireState<'offered'> | RequireState<'loyal'> | RequireState<'status'>;\n  reverse: boolean;\n}\n\nexport class Recident {\n  public timeLeft = 5;\n  public working?: Jinsai;\n  constructor(\n    public requirements: Requirment[],\n    public timeLimit = 5,\n  ) {\n    \n  }\n}\n","import produce from \"immer\";\nimport { Jinsai } from \"./Jinsai\";\n\nexport class Good {\n  constructor(\n    public name: string,\n    public price: number,\n    public description: string,\n    public effect: (jinsai: Jinsai) => Jinsai | void,\n  ) {\n\n  }\n}\n\nexport const GoodList = [\n  new Good(\n    '算法导论',\n    8000,\n    '技术 + 1024',\n    (jinsai) => {\n      jinsai._tec += 1024;\n      return jinsai\n    }\n  ),\n  new Good(\n    '数据结构',\n    8000,\n    '经验 + 1024',\n    (jinsai) => {\n      jinsai._exp += 1024;\n      return jinsai;\n    }\n  ),\n  new Good(\n    '全家都是产品经理',\n    1000,\n    '经验 - 300，技术 - 300',\n    (jinsai) => {\n      // return produce(jinsai, (draft) => {\n      //   draft.tec -= 300;\n      //   draft.exp -= 300;\n      // })\n      jinsai._tec -= 300;\n      jinsai._exp -= 300;\n    }\n  ),\n  new Good(\n    '生日礼物',\n    4000,\n    '精神 + 500',\n    (jinsai) => {\n      // return produce(jinsai, (draft) => {\n      //   draft.mental -= 300;\n      // })\n      jinsai._mental += 500;\n    }\n  ),\n];\n\nexport type Shop = Map<typeof GoodList[number], number>;\n","import produce from \"immer\";\nimport { Jinsai } from \"../class/Jinsai\";\nimport { Recident } from \"../class/Recident\";\nimport { Good, Shop } from \"../class/Shop\";\nimport { Work } from \"../services/findWorkService\";\nimport { createJinsai } from \"../services/jinsaiService\";\nimport { createRecidence } from \"../services/recidenceService\";\nimport { createShop } from \"../services/shopService\";\nimport { ActionMapToReducerMap, contextHelper } from \"./ContextHelper\";\n\ninterface GameState {\n  jinsais: Jinsai[];\n  profiles: Jinsai[];\n  money: number;\n  tp: number;\n  maxTp: number;\n  desks: number;\n  shop: Shop;\n  recident: Recident;\n}\n\ninterface ActionMap {\n  buyMaxTp: never;\n  buyDesk: never;\n  buyProfile: never;\n  setJinsais: Jinsai[];\n  setProfiles: Jinsai[];\n  // pua: Jinsai;\n  // buy: {\n  //   jinsai: Jinsai;\n  //   good: Good;\n  // };\n  // overWork: Jinsai;\n  // work: {\n  //   jinsai: Jinsai;\n  //   work: Work;\n  // };\n  buy: Good;\n  setRecident: Recident;\n  goScene: Jinsai;\n  setMoney: number;\n  updataJinsai: {\n    jinsai: Jinsai;\n    data: Jinsai;\n  };\n  useTp: never;\n}\n\nconst reducerMap: ActionMapToReducerMap<ActionMap, GameState> = {\n  buyMaxTp(state) {\n    return produce(state, draft => {\n      draft.money -= 100000;\n      draft.maxTp += 1;\n    })\n  },\n  buyDesk(state) {\n    return produce(state, draft => {\n      draft.money -= 200000;\n      draft.desks += 1;\n    })\n  },\n  buyProfile(state) {\n    return produce(state, draft => {\n      draft.money -= 10000;\n      draft.profiles.push(createJinsai());\n    })\n  },\n  // buy(state, payload) {\n  //   return produce(state, draft => {\n  //     const left = state.shop.get(payload.good);\n  //     if (typeof left === 'number') {\n  //       draft.shop.set(payload.good, left - 1);\n  //       draft.money -= payload.good.price;\n  //       const index = draft.jinsais.indexOf(payload.jinsai);\n  //       if (index > -1) {\n  //         draft.jinsais[index].giveGift(payload.good);\n  //       } else {\n  //         console.error('受益人不存在');\n  //       }\n  //     } else {\n  //       console.error('商品无库存');\n  //     }\n  //   })\n  // },\n  // overWork(state, jinsai) {\n  //   return produce(state, draft => {\n  //     const index = draft.jinsais.indexOf(jinsai);\n  //     if (index > -1) {\n  //       draft.tp -= 1;\n  //       draft.jinsais[index].work();\n  //     } else {\n  //       console.error('操作对象不存在');\n  //     }\n  //   })\n  // },\n  // pua(state, jinsai) {\n  //   return produce(state, draft => {\n  //     const index = draft.jinsais.indexOf(jinsai);\n  //     if (index > -1) {\n  //       draft.tp -= 1;\n  //       draft.jinsais[index].pua();\n  //     } else {\n  //       console.error('操作对象不存在');\n  //     }\n  //   })\n  // },\n  // work(state, payload) {\n  //   return produce(state, draft => {\n  //     const index = draft.jinsais.indexOf(payload.jinsai);\n  //     if (index > -1) {\n  //       draft.jinsais[index].work(payload.work);\n  //     } else {\n  //       console.error('操作对象不存在');\n  //     }\n  //   })\n  // },\n  buy(state, good) {\n    return produce(state, draft => {\n      const left = state.shop.get(good);\n      if (typeof left === 'number') {\n        draft.shop.set(good, left - 1);\n        draft.money -= good.price;\n      } else {\n        console.error('商品无库存');\n      }\n    })\n  },\n  setJinsais(state, jinsais) {\n    return produce(state, draft => {\n      draft.jinsais = jinsais;\n    })\n  },\n  setProfiles(state, jinsais) {\n    return produce(state, draft => {\n      draft.profiles = jinsais;\n    })\n  },\n  setRecident(state, recident) {\n    return produce(state, draft => {\n      draft.recident = recident;\n    })\n  },\n  goScene(state, jinsai) {\n    return produce(state, draft => {\n      draft.recident.working = jinsai;\n      const index = draft.jinsais.indexOf(jinsai);\n      if (index > -1) {\n        draft.jinsais = [...draft.jinsais.slice(0, index), ...draft.jinsais.slice(index + 1)]\n      }\n    })\n  },\n  setMoney(state, money) {\n    return produce(state, draft => {\n      draft.money = money;\n    })\n  },\n  updataJinsai(state, {jinsai, data}) {\n    return produce(state, draft => {\n      const index = draft.jinsais.indexOf(jinsai);\n      draft.jinsais[index]._exp = data._exp;\n      draft.jinsais[index]._tec = data._tec;\n      draft.jinsais[index]._mental = data._mental;\n      draft.jinsais[index]._salary = data._salary;\n      draft.jinsais[index].skills = data.skills;\n      draft.jinsais[index].state = data.state;\n    })\n  },\n  useTp(state) {\n    return produce(state, draft => {\n      draft.tp --;\n    })\n  }\n}\n\n// const reducer = reducerMapToReducer(reducerMap);\nconst initState: GameState = {\n  maxTp: 3,\n  tp: 3,\n  money: 200000,\n  jinsais: [createJinsai(), createJinsai(), createJinsai(), ],\n  profiles: [createJinsai()],\n  shop: createShop(),\n  desks: 4,\n  recident: createRecidence(),\n}\nexport const [GameStateContext, useGameState] = contextHelper(reducerMap, initState, 'gameState', 'gameStateDispatch');","import { GoodList, Shop } from \"../class/Shop\";\n\nexport function createShop(): Shop {\n  const shop: Shop = new Map();\n  GoodList.forEach(good => {\n    shop.set(good, Math.floor(Math.random() * 5));\n  });\n  return shop;\n}\n","import { Recident, Requirment, RequireType } from \"../class/Recident\";\nimport { SkillList } from '../class/Skill';\n\nexport function createRecidence(): Recident {\n  const requirs: Map<\n    'status' | 'tec' | 'exp' | 'mental' | typeof SkillList[number]['name'],\n    Requirment\n  > = new Map();\n  while (requirs.size < 5) {\n    const key = RequireType[Math.floor(Math.random() * RequireType.length)];\n    switch (key) {\n      case 'Loyal':\n        break;\n      case 'exp':\n      case 'tec':\n      case 'mental':\n        requirs.set(key, {\n          require: {\n            name: key,\n            value: Math.random() * 5000\n          },\n          reverse: Math.random() > 0.5\n        });\n        break;\n      case 'astable':\n      case 'graduate':\n      case 'usual':\n        requirs.set('status', {\n          require: {\n            state: 'status',\n            value: key,\n          },\n          reverse: Math.random() > 0.5\n        });\n        break;\n      case 'skill':\n        const skill = SkillList[Math.floor(Math.random() * SkillList.length)];\n        requirs.set(skill.name, {\n          require: skill,\n          reverse: Math.random() > 0.5,\n        });\n    }\n  }\n  return new Recident(Array.from(requirs.values()));\n}","import React, { CSSProperties, FunctionComponent, useContext, useState } from 'react';\nimport './Azito.scss';\nimport { JinsaiBlock } from './JinsaiBlock';\nimport { Jinsai } from './class/Jinsai';\nimport { CacheStateContext, Page } from './contexts/CacheState';\nimport { GameStateContext } from './contexts/GameState';\ninterface AStyle extends CSSProperties {\n  '--trans': string;\n  '--delay': string;\n  '--init-trans'?: string;\n}\nexport const Azito: FunctionComponent = () => {\n  const {cacheStateDispatch} = useContext(CacheStateContext);\n  const {gameState} = useContext(GameStateContext);\n  const [disappearing, setDisappearing] = useState(false);\n  const [curJinsai, setCurJinsai] = useState<Jinsai | null>(null);\n  function changePage(page: Page) {\n    cacheStateDispatch({\n      type: 'changPage',\n      payload: page,\n    })\n  }\n  function handleJinsaiClick(jinsai: Jinsai) {\n    setDisappearing(true);\n    setCurJinsai(jinsai);\n    setTimeout(() => {\n      cacheStateDispatch({\n        type: 'setCurJinsai',\n        payload: jinsai,\n      })\n      changePage('human');\n    }, 600);\n  }\n  return (\n    <div className=\"azito\">\n      {gameState.jinsais.map((jinsai, index) =>\n      <div key={jinsai.name + index}\n      className={\n        `jinsai-wrapper\n          ${disappearing ? curJinsai !== jinsai ? 'azito-jinsai-disappearing'\n            : 'azito-jinsai-pushing' : 'azito-jinsai-init'\n        }`\n      }\n      style={{\n        '--trans': `${(9 - index) * 100}%`,\n        '--delay': (0.8/gameState.jinsais.length) * index +'s',\n        '--init-trans': '100vw',\n      } as AStyle}>\n        <JinsaiBlock\n          jinsai={jinsai}\n          key={jinsai.name}\n          onClick={() => handleJinsaiClick(jinsai)}>\n        </JinsaiBlock>\n        </div>)}\n      <button className=\"foot-button zhuchang slant\" data-content=\"面试\" onClick={()=>changePage('interview')}><span className=\"content\">面试</span></button>\n      <button className=\"foot-button xiangmu slant\" data-content=\"接项目\"><span className=\"content\">接项目</span></button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Component, CSSProperties } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Confirm.scss';\n\ninterface Props {\n  context: string;\n  parent: HTMLElement;\n  onYes?: () => void;\n  onNo?: () => void;\n  alert?: boolean;\n}\n\ninterface CFStyle extends CSSProperties {\n  '--trans'?: string;\n}\n\n// const Confirm: FC<Props> = (props: Props) => {\n//   // function removeSelf() {\n//   //   toggleShow(false);\n//   //   setTimeout(() => {\n//   //     props.parent?.remove();\n//   //   }, 300);\n//   // }\n//   function handleYes () {\n//     if (props.onYes) {\n//       props.onYes();\n//     }\n//     // setTimeout(() => {\n//     //   toggleShow(false);\n//     // }, 300);\n//     // removeSelf();\n//   }\n//   function handleNo () {\n//     if (props.onNo) {\n//       props.onNo();\n//     }\n//     // removeSelf();\n//   }\n//   const [show, toggleShow] = useState(true);\n//   return (\n//     <div className=\"confirm\" style={{'--trans': show?'0':'-100vh'} as CFStyle}>\n//       <div className=\"block\">\n//         <div className=\"body\">\n//           {props.context}\n//         </div>\n//         <div className=\"foot\">\n//           <button className=\"yes\" data-content=\"确定\" onClick={handleYes}>确定</button>\n//           <button className=\"no\" data-content=\"取消\" onClick={handleNo}>取消</button>\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nclass Confirm extends Component<Props> {\n  handleYes = () =>{\n    if (this.props.onYes) {\n      this.props.onYes();\n    }\n    this.setState({\n      show: false\n    }, () => {\n      window.setTimeout(() => {\n        this.props.parent.remove();\n      }, 400);\n    });\n  }\n  handleNo = () =>{\n    if (this.props.onNo) {\n      this.props.onNo();\n    }\n    this.setState({\n      show: false\n    }, () => {\n      window.setTimeout(() => {\n        this.props.parent.remove();\n      }, 400);\n    });\n  }\n  state = {\n    show: false,\n  }\n  componentDidMount = () => {\n    window.setTimeout(() => {\n      this.setState({\n        show: true\n      });\n    }, 10);\n  }\n  render() {\n    return (\n      <div className=\"confirm\" style={{'--trans': this.state.show?'1':'0'} as CFStyle}>\n        <div className=\"block\">\n          <div className=\"body\">\n            {this.props.context}\n          </div>\n          <div className=\"foot\">\n            <button className=\"yes\" data-content=\"确定\" onClick={this.handleYes}>确定</button>\n            {!this.props.alert&&<button className=\"no\" data-content=\"取消\" onClick={this.handleNo}>取消</button>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport function $confirm(props: Omit<Props, 'parent'>) {\n  const parent = document.createElement('div');\n  document.body.append(parent);\n  ReactDOM.render(React.createElement(Confirm, {...props, parent}), parent);\n}\n\n","import React, { CSSProperties, FunctionComponent, useContext } from \"react\";\r\nimport { JinsaiBlock } from \"./JinsaiBlock\";\r\nimport './Interview.scss';\r\nimport { Jinsai } from \"./class/Jinsai\";\r\nimport { $confirm } from \"./components/Confirm\";\r\nimport { GameStateContext } from \"./contexts/GameState\";\r\nimport { CacheStateContext, Page } from \"./contexts/CacheState\";\r\n\r\ninterface AStyle extends CSSProperties {\r\n  '--trans': string;\r\n  '--delay': string;\r\n  '--init-trans'?: string;\r\n}\r\n\r\nexport const Interview: FunctionComponent = () => {\r\n  const {gameState, gameStateDispatch} = useContext(GameStateContext);\r\n  const {cacheStateDispatch} = useContext(CacheStateContext);\r\n  function handleClick(\r\n    profile: Jinsai,\r\n  ) {\r\n    $confirm({\r\n      context: `确定要雇佣 ${profile.name} 吗？`,\r\n      onYes: () => {\r\n        if (gameState.jinsais.length < gameState.desks) {\r\n          gameStateDispatch({\r\n            type: 'setJinsais',\r\n            payload: [...gameState.jinsais, profile]\r\n          })\r\n          const index = gameState.profiles.indexOf(profile);\r\n          gameStateDispatch({\r\n            type: 'setProfiles',\r\n            payload: [...gameState.profiles.slice(0, index), ...gameState.profiles.slice(index + 1)]\r\n          })\r\n        } else {\r\n          $confirm({\r\n            context: '工位不足',\r\n            alert: true,\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  function changePage(page: Page) {\r\n    cacheStateDispatch({\r\n      type: 'changPage',\r\n      payload: page,\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"interview\">\r\n      <div className=\"background\"></div>\r\n      {gameState.profiles.map((jinsai, index) =>\r\n      <div \r\n      className={\r\n        `jinsai-wrapper\r\n          interview-jinsai-init\r\n        }`\r\n      }\r\n      style={{\r\n        '--trans': `${(9 - index) * 100}%`,\r\n        '--delay': (0.8/gameState.jinsais.length) * index +'s',\r\n        '--init-trans': '100vw',\r\n      } as AStyle}>\r\n        <JinsaiBlock\r\n          jinsai={jinsai}\r\n          key={jinsai.name}\r\n          onClick={()=>handleClick(jinsai)}\r\n          delay={index*0.2+'s'}\r\n          ></JinsaiBlock>\r\n      </div>)}\r\n      <button className=\"foot-button zhuchang slant\" data-content=\"人才\" onClick={()=>changePage('consumables')}><span className=\"content\">人才</span></button>\r\n    </div>\r\n  )\r\n}","export const dict: Record<string, string> = {\n  'mental': '精神',\n  'tec': '技术',\n  'exp': '经验',\n  'graduate': '应届生',\n  'usual': '安稳工作',\n  'astable': '准备跳槽',\n  'offered': '离职中',\n}\n\nexport function translate(word: string) {\n  return dict[word] || word;\n}\n","import { CSSProperties, Fragment, FunctionComponent, useContext, useState } from \"react\";\nimport { Jinsai } from \"./class/Jinsai\";\nimport { $confirm } from \"./components/Confirm\";\nimport { JinsaiBlock } from \"./JinsaiBlock\";\nimport './Human.scss';\nimport { isRequireProp, isRequireState, isSkill, Requirment } from \"./class/Recident\";\nimport { Rank } from \"./tools/calcRank\";\nimport { translate } from \"./tools/translate\";\nimport produce from \"immer\";\nimport { Good } from \"./class/Shop\";\nimport { GameStateContext } from \"./contexts/GameState\";\nimport { CacheStateContext, Page } from \"./contexts/CacheState\";\nimport { giveGift, pua, work } from \"./services/jinsaiService\";\n\ninterface HStyle extends CSSProperties {\n  '--color': string;\n}\n\nexport const Human: FunctionComponent = () => {\n  const { gameState, gameStateDispatch } = useContext(GameStateContext);\n  const { cacheState, cacheStateDispatch } = useContext(CacheStateContext);\n  const curJinsai = cacheState.curJinsai!;\n  const [nextValue, setNextValue] = useState<Jinsai|undefined>();\n  function changePage(page: Page) {\n    cacheStateDispatch({\n      type: 'changPage',\n      payload: page,\n    })\n  }\n  function handleBackClick() {\n    changePage('consumables');\n  }\n  function shusong(jinsai: Jinsai) {\n    const index = gameState.jinsais.indexOf(jinsai);\n    gameStateDispatch({\n      type: 'setJinsais',\n      payload: [...gameState.jinsais.slice(0, index), ...gameState.jinsais.slice(index + 1)]\n    })\n  }\n  function handleShusong(jinsai: Jinsai) {\n    $confirm({\n      context: `确定要把人才 ${jinsai.name} 输送给社会吗？`,\n      onYes: () => { \n        shusong(jinsai);\n        cacheStateDispatch({\n          type: 'setCurJinsai',\n          payload: null,\n        });\n        changePage('consumables');\n      },\n    });\n  }\n  function order(req: Requirment) {\n    enum orders {\n      tec,\n      exp,\n      mental,\n      status,\n      skill,\n    }\n    if (isSkill(req.require)) {\n      return orders['skill'];\n    }\n    if (isRequireState(req.require)) {\n      return orders['status'];\n    }\n    if (isRequireProp(req.require)) {\n      return orders[req.require.name];\n    }\n    return -1;\n  }\n  function satisfy(condition: boolean, reverse: boolean) {\n    if (reverse) {\n      return !condition;\n    }\n    return condition;\n  }\n  function goSceneClick() {\n    if (gameState.recident?.working) {\n      $confirm({\n        alert: true,\n        context: `${gameState.recident.working.name} 正在驻场`,\n      })\n    } else {\n      $confirm({\n        context: `确定要派遣 ${curJinsai.name} 驻场吗？`,\n        onYes: goScene,\n      });\n    }\n  }\n  function goScene() {\n    gameStateDispatch({\n      type: 'goScene',\n      payload: curJinsai,\n    });\n    changePage('consumables');\n  }\n  function buy(good: Good) {\n    gameStateDispatch({\n      type: 'buy',\n      payload: good,\n    });\n    const data = giveGift(cacheState.curJinsai!, good);\n    updateJinsaiDate(data);\n  }\n  function updateJinsaiDate(data: Jinsai) {\n    setNextValue(data);\n    window.setTimeout(() => {\n      gameStateDispatch({\n        type: 'updataJinsai',\n        payload: {\n          jinsai: cacheState.curJinsai!,\n          data,\n        }\n      });\n      setNextValue(undefined);\n    }, 2000);\n  }\n  function goodClick(good: Good) {\n    if (gameState.money < good.price) {\n      $confirm({\n        context: '余额不足',\n        alert: true,\n      });\n    } else {\n      $confirm({\n        context: `确定要送给 ${curJinsai.name} ${good.name} 吗`,\n        onYes: () => buy(good),\n      });\n    }\n  }\n  function overWorkClick() {\n    if (gameState.tp > 0) {\n      const data = work(cacheState.curJinsai!);\n      gameStateDispatch({\n        type: 'useTp'\n      })\n      updateJinsaiDate(data);\n    } else {\n      $confirm({\n        'context': 'LX不足',\n        alert: true,\n      });\n    }\n  }\n  function puaClick() {\n    if (gameState.tp > 0) {\n      const jinsai = cacheState.curJinsai!;\n      const data = pua(jinsai);\n      const tec = data._tec - jinsai._tec;\n      const exp = data._exp - jinsai._exp;\n      const mental = data._mental - jinsai._mental;\n      $confirm({\n        context: `${jinsai.name}的${(tec&&'技术')||(exp&&'经验')||(mental&&'精神')}提升了${tec||exp||mental}`,\n      });\n      gameStateDispatch({\n        type: 'useTp'\n      })\n      updateJinsaiDate(data);\n    } else {\n      $confirm({\n        'context': 'LX不足',\n        alert: true,\n      });\n    }\n  }\n  return (\n    <div className=\"human\">\n      <div className=\"not-jinsai\">\n        <div className=\"recident\">\n          <div className=\"recident-title\">驻场需求</div>\n          {\n            [...gameState.recident.requirements].sort((a, b) => {\n              return order(a) - order(b);\n            }).map((req, index) => {\n              if (isSkill(req.require)) {\n                return <div className=\"require\" key={req.require.name}>\n                  <div className=\"left\">\n                    {req.reverse?'不要 ':''}\n                    {translate(req.require.name)}\n                  </div>\n                  {/* {curJinsai.skills.indexOf(req.require) > -1 ? 'yes' : 'no'} */}\n                  <div className=\"circle\"\n                    style={{\n                      '--color': satisfy(curJinsai.skills.indexOf(req.require) > -1, req.reverse) ? 'lightgreen' : 'red'\n                    } as HStyle}></div>\n                </div>\n              }\n              if (isRequireProp(req.require)) {\n                return <div className=\"require\" key={req.require.name}>\n                  <div className=\"left\">\n                    {translate(req.require.name)}\n                    {req.reverse?' < ':' > '}\n                    {Rank[Math.floor(req.require.value / 1024)]}\n                  </div>\n                  {/* {curJinsai[req.require.name] > req.require.value ? 'yes' : 'no'} */}\n                  <div className=\"circle\"\n                    style={{\n                      '--color': satisfy(curJinsai[req.require.name] > req.require.value, req.reverse) ? 'lightgreen' : 'red'\n                    } as HStyle}></div>\n                </div>\n              } \n              if (isRequireState(req.require)) {\n                return <div className=\"require\" key={req.require.value}>\n                  <div className=\"left\">\n                    {req.reverse?'不要 ':''}\n                    {translate(req.require.value)}\n                  </div>\n                  {/* {curJinsai.state.status === req.require.value ? 'yes' : 'no'} */}\n                  <div className=\"circle\"\n                    style={{\n                      '--color': satisfy(curJinsai.state.status === req.require.value, req.reverse) ? 'lightgreen' : 'red'\n                    } as HStyle}></div>\n                </div>\n              }\n              return <Fragment key={index}>/</Fragment>\n            })\n          }\n          {\n            !gameState.recident.working ?\n            <div className=\"require\">剩余期限：{gameState.recident.timeLimit}</div>\n            :<>\n              <div className=\"require\">剩余工时：{gameState.recident.timeLeft}</div>\n              <div className=\"require\">驻场工程师： {gameState.recident.working?.name}</div>\n            </>\n          }\n        </div>\n        <div className=\"shop\">\n          <div className=\"recident-title\">福利</div>\n          {Array.from(gameState.shop).map(([good, quatity], index) => {\n            if (quatity === 0) {\n              return <Fragment key={index}></Fragment>\n            }\n            return (<div className=\"good-row\" key={good.name} onClick={()=>goodClick(good)}>\n              <div className=\"good \">\n                <div className=\"good-name\">{good.name}</div>\n                <div className=\"good-description\">{good.description}</div>\n              </div>\n              <div className=\"good-addition\">\n                <div className=\"good-price\">{good.price}</div>\n                <div className=\"good-quantity\">{quatity}</div>\n              </div>\n            </div>)\n          })}\n        </div>\n        <div className=\"block\">\n        <div className=\"top\">\n          <div className=\"yanxiu\">\n            <div className=\"block-title\">关怀</div>\n            <div className=\"block-sub-title \">消耗1点LX忽悠员工</div>\n            <div className=\"yanxiu-button-wrapper\">\n              <button className=\"yanxiu-button\"\n                title=\"员工要跑？那一定是钱少了。\">发工资</button>\n              <button className={`yanxiu-button ${!nextValue&&'clickable'}`} onClick={()=>(!nextValue&&puaClick())}\n                title=\"公司不养闲人！\">PUA</button>\n              <button className={`yanxiu-button ${!nextValue&&'clickable'}`} onClick={()=>(!nextValue&&overWorkClick())}\n                title=\"加班虽然没有产出，但是能成长啊！\">加班</button>\n            </div>\n          </div>\n          <div className=\"status-detail\">\n            <div className=\"recident-title\">状态</div>\n          </div>\n        </div>\n        <div className=\"bottom\">\n          <div className=\"skills-detail\">\n            <div className=\"skills-title\">技能</div>\n            <div className=\"skills-detail-body\">\n              {curJinsai.skills.map(skill => {\n                return (\n                  <div className=\"skill-detail\" key={skill.name}>\n                    <div className=\"skill-name\">{skill.name}</div>\n                    <table className=\"skill-table\">\n                      <thead>\n                        <tr>\n                          <th></th>\n                          <th>初始</th>\n                          <th>成长</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>技术</td>\n                          <td>{skill.init.tec}</td>\n                          <td>{skill.turn.tec}</td>\n                        </tr>\n                        <tr>\n                          <td>经验</td>\n                          <td>{skill.init.exp}</td>\n                          <td>{skill.turn.exp}</td>\n                        </tr>\n                        <tr>\n                          <td>精神</td>\n                          <td>{skill.init.mental}</td>\n                          <td>{skill.turn.mental}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <div className=\"passive-skill\">{skill.passive?.description}</div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n      <div className=\"jinsai-wrapper\">\n        <JinsaiBlock jinsai={cacheState.curJinsai!} nextData={nextValue}></JinsaiBlock>\n      </div>\n      <div className=\"left-button\">\n        <button className=\"foot-button zhuchang slant\" data-content=\"驻场\" onClick={goSceneClick}><span className=\"content\">驻场</span></button>\n        <button className=\"foot-button shusongrencai slant\" data-content=\"输送人才\" onClick={()=>handleShusong(cacheState.curJinsai!)}><span className=\"content\">输送人才</span></button>\n      </div>\n      <div className=\"right-button\">\n        <button className=\"foot-button fanhui slant\" data-content=\"返回\" onClick={handleBackClick}><span className=\"content\">返回</span></button>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport './RollingNews.scss';\n\nexport function RollingNews() {\n  const initNews = [\n    '本游戏为未完成品，您看到本游戏必有隐情',\n    '分辨率未调试，推荐使用最大化窗口游戏',\n    '目前无法点击接项目按钮进入下一轮，刷新可重置数据',\n  ];\n  const [news] = useState(initNews);\n  const [curIndex, setCurIndex] = useState(0);\n  useEffect(() => {\n    const interval = window.setInterval(() => {\n      setCurIndex(curIndex + 1);\n    }, 5000);\n    return () => {\n      window.clearInterval(interval);\n    }\n  });\n  const even = Math.floor(curIndex / news.length) % 2;\n  return (\n    <div className=\"rolling-news\">\n        {/* {news.map((n, i) => {\n          return (\n            <>\n              <div className=\"news\" style={{'--offset': (even ? news.length + i : i) - curIndex % news.length} as any}>{n}</div>\n              <div className=\"news\" style={{'--offset': (!even ? news.length + i : i) - curIndex % news.length} as any}>{n}</div>\n            </>\n          )\n        })} */}\n        <div className=\"news\">\n          {news[curIndex % news.length]}\n        </div>\n    </div>\n  );\n}","import { FC, useContext } from \"react\";\nimport background from './images/azito/office.jpg';\nimport './Frame.scss';\nimport { Azito } from \"./Azito\";\nimport { Interview } from \"./Interview\";\nimport { Human } from \"./Human\";\nimport { $confirm } from \"./components/Confirm\";\nimport { GameStateContext } from \"./contexts/GameState\";\nimport { CacheStateContext, Page } from \"./contexts/CacheState\";\nimport { RollingNews } from \"./RollingNews\";\n\nconst title: Partial<Record<Page, [string, string]>> = {\n  'consumables': ['人才', 'consumables'],\n  'interview': ['简历', 'waste paper'],\n  'human': ['人事', 'mind control'],\n};\n\nexport const Frame: FC = () => {\n  const {gameState, gameStateDispatch} = useContext(GameStateContext);\n  const {cacheState} = useContext(CacheStateContext);\n  const page = cacheState.page;\n  function buyTp() {\n    if (gameState.money < 100000) {\n      $confirm({\n        context: '余额不足',\n        alert: true,\n      })\n    } else {\n      gameStateDispatch({\n        type: 'buyMaxTp',\n      })\n    }\n  }\n  function tpClick() {\n    $confirm({\n      context: '确定要花费100000p增加1点LX上限吗？',\n      onYes: () => buyTp()\n    })\n  }\n  function buyDesk() {\n    if (gameState.money < 200000) {\n      $confirm({\n        context: '余额不足',\n        alert: true,\n      })\n    } else {\n      gameStateDispatch({\n        type: 'buyDesk',\n      })\n    }\n  }\n  function buyProfile() {\n    if (gameState.money < 10000) {\n      $confirm({\n        context: '余额不足',\n        alert: true,\n      })\n    } else if (gameState.profiles.length >= 10) {\n      $confirm({\n        context: '简历超出上限',\n        alert: true,\n      })\n    } else {\n      gameStateDispatch({\n        type: 'buyProfile',\n      })\n    }\n  }\n  function deskClick() {\n    $confirm({\n      context: '确定要花费200000p添加一个工位吗？',\n      onYes: () => buyDesk()\n    })\n  }\n  function profileClick() {\n    $confirm({\n      context: '确定要花费10000p打捞一份简历吗？',\n      onYes: () => buyProfile()\n    })\n  }\n  return (\n    <div\n      className=\"frame\"\n    >\n      <img className=\"base-background\" src={background} alt=\"office\"/>\n      <div className=\"head\">\n        <div className=\"background\"></div>\n        <div className=\"left\">\n          <div className=\"title-wrapper\">\n            <div className=\"title\">{title[page]![0]}</div>\n            <div className=\"title hidden\">{title[page]![0]}</div>\n          </div>\n          <div className=\"title-wrapper\">\n            <div className=\"subtitle\">{title[page]![1]}</div>\n            <div className=\"subtitle hidden\">{title[page]![1]}</div>\n          </div>\n        </div>\n        <div className=\"right\">\n        <div className=\"item\">\n            <div className=\"content\">\n              <div className=\"tp\">资产：</div>\n              <div className=\"tp-count\">{gameState.money}</div>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"content\">\n              <div className=\"tp\">LX</div>\n              <div className=\"tp-count\">{gameState.tp}/{gameState.maxTp}</div>\n            </div>\n            <div className=\"content\">\n              <div className=\"plus\" onClick={tpClick}></div>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"content row\">\n              <div>工位：<span className=\"tp-count\">{gameState.jinsais.length}/{gameState.desks} </span></div>\n            </div>\n            <div className=\"content\">\n              <div className=\"plus\" onClick={deskClick}></div>\n            </div>\n            <div className=\"content row\">\n              <div> 简历：<span className=\"tp-count\">{gameState.profiles.length}</span></div>\n            </div>\n            <div className=\"content\">\n              <div className=\"plus\" onClick={profileClick}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"body\">\n        {/* {jinsais.map(jinsai =><JinsaiBlock jinsai={jinsai} key={jinsai.name}></JinsaiBlock>)} */}\n        {page==='consumables' && <Azito />}\n        {page==='interview' && <Interview />}\n        {page==='human' && <Human />}\n      </div>\n      <div className=\"foot\">\n        <div className=\"foot-blank slant\">\n          <div className=\"left\"></div>\n            {/* <div className=\"center\"><span className=\"content\">公司资产：{gameState.money}p</span></div> */}\n            <div className=\"center\"><span className=\"content\"><RollingNews /></span></div>\n          <div className=\"right\"></div>\n        </div>\n        {/* <button className=\"foot-button zhuchang slant\" data-content=\"面试\" onClick={()=>changePage('interview')}><span className=\"content\">面试</span></button>\n        <button className=\"foot-button xiangmu slant\" data-content=\"接项目\"><span className=\"content\">接项目</span></button> */}\n      </div>\n    </div>\n  )\n}","import { Jinsai } from \"../class/Jinsai\";\nimport { Skill, SkillList } from \"../class/Skill\";\nimport { Rank } from \"../tools/calcRank\";\n\ntype Present = Skill | ((jinsai: Jinsai) => Jinsai);\ntype Target = typeof SkillList[number]['name'];\n\nconst NameList = [\n  '游戏项目',\n  '无人机',\n  '导航',\n  '人工智能',\n  '大数据',\n  '无人车',\n  '小视频客户端',\n  '美妆APP',\n] as const;\n\nexport class Work {\n  constructor(\n    public rewardRank: Rank,\n    public hard: number,\n    public require: {\n      exp: number;\n      tec: number;\n    },\n    public present: Present | null,\n    public target: Target[] = [],\n    public name?: typeof NameList[number],\n  ) {\n\n  }\n}\n\nexport function createWork() {\n  const rewardRank = Math.floor(Math.random() * Rank[\"S+\"]);\n  const hard = Math.floor(Math.random() * 1000);\n  const target: Set<Target> = new Set();\n  let present: Present | null = null;\n  for (let i = 0; i < 4; ++i) {\n    const skill = SkillList[Math.floor(Math.random() * SkillList.length * 3)];\n    if (skill) {\n      if (i < 3) {\n        target.add(skill.name);\n      } else {\n        present = skill;\n      }\n    }\n  }\n  const exp = Math.floor(Math.random() * Rank['S+'] * 1024);\n  const tec = Math.floor(Math.random() * Rank['S+'] * 1024);\n  return new Work(rewardRank, hard, {exp, tec}, present, Array.from(target));\n}\n","import { produce } from 'immer';\nimport { useContext, useState } from 'react';\nimport { Jinsai } from './class/Jinsai';\nimport { GameStateContext } from './contexts/GameState';\nimport './FindWork.scss';\nimport { JinsaiBlock } from './JinsaiBlock';\nimport { createWork, Work } from './services/findWorkService';\nimport { createJinsai } from './services/jinsaiService';\n\nexport function FindWork() {\n  const [jinsaiCursor, setJinsaiCursor] = useState(0);\n  const [workCursor, setWorkCursor] = useState(0);\n  const {gameState, gameStateDispatch} = useContext(GameStateContext);\n  const [jinsaisCopy, setJinsaisCopy] = useState(produce(gameState.jinsais, () => {}));\n  const works: Work[] = [];\n  const success: Array<{\n    jinsaiIndex: number;\n    work: Work;\n  }> = [];\n  for (let i = 0; i < 10; ++i) {\n    if (i < 4) {\n      works.push(createWork());\n      continue;\n    }\n    if (Math.random() > 0.5) {\n      works.push(createWork());\n    }\n  }\n  const BaiZi: Jinsai[] = [];\n  const TengBen: Jinsai[] = [];\n  let timeout: number | null = null;\n  for (let i = 0; i < works.length; ++i) {\n    BaiZi.push(createJinsai());\n    TengBen.push(createJinsai());\n  }\n  function newTurn() {\n    timeout = window.setTimeout(() => {\n      check();\n    }, 15000);\n  }\n  function start() {\n    newTurn();\n  }\n  function skip() {\n    if (timeout) {\n      window.clearTimeout();\n    }\n    check();\n  }\n  function skillCount(jinsai: Jinsai, work: Work) {\n    let skillCount = 0;\n    jinsai.skills.forEach(skill => {\n      if (work.target.indexOf(skill.name) > -1) {\n        skillCount++;\n      }\n    })\n    return skillCount;\n  }\n  function check() {\n    setWorkCursor(workCursor + 1);\n    if (\n      jinsaisCopy[jinsaiCursor].tec > TengBen[workCursor].tec\n      && jinsaisCopy[jinsaiCursor].tec > BaiZi[workCursor].tec\n    ) {\n      win();\n    }\n    if (workCursor < works.length - 1) {\n      newTurn();\n    } else {\n      settle();\n    }\n  }\n  function win() {\n    const newJinsai = new Set(jinsaisCopy);\n    newJinsai.delete(jinsaisCopy[jinsaiCursor]);\n    setJinsaisCopy(Array.from(newJinsai));\n  }\n  function settle() {\n    let income = 0;\n    success.forEach(pair => {\n      const jinsai = jinsaisCopy[pair.jinsaiIndex];\n      const work = pair.work;\n      const expPercent = jinsai.exp / work.require.exp;\n      const tecPercent = jinsai.tec / work.require.tec;\n      income += expPercent * tecPercent * work.rewardRank * 500000 + skillCount(jinsai, work) * 2000;\n      // jinsaisCopy[pair.jinsaiIndex].work(work.hard);\n      // jinsai.work(work);\n    });\n    // setGlobalState({\n    //   type: 'setMoney',\n    //   params: {\n    //     money: globalState.money + income,\n    //   }\n    // });\n    // changeJinsais(jinsaisCopy);\n  }\n  function end() {\n    // changePage('consumables');\n  }\n  function arrowClick(dir: 'left' | 'right') {\n  if (dir === 'left') {\n      let cursor = jinsaiCursor - 1;\n      while (cursor > 0 && ((c)=>success.find(s=>s.jinsaiIndex===c))(cursor)) {\n        cursor--;\n      }\n      if (cursor > -1) {\n        setJinsaiCursor(cursor);\n      }\n    } else {\n      let cursor = jinsaiCursor + 1;\n      while (cursor < jinsaisCopy.length && ((c)=>success.find(s=>s.jinsaiIndex===c))(cursor)) {\n        cursor++;\n      }\n      if (cursor < jinsaisCopy.length) {\n        setJinsaiCursor(cursor);\n      }\n    }\n  }\n  return (\n    <div className=\"find-work\">\n      <div className=\"background\"></div>\n      <div className=\"left-area\">\n        <div className=\"title\"><span>我方</span></div>\n        <div className=\"jinsai-area\">\n          {jinsaisCopy.map(jinsai => {\n            return <div className=\"jinsai-wrapper\" key={jinsai.name}>\n              <JinsaiBlock jinsai={jinsai}></JinsaiBlock>\n            </div>\n          })}\n        </div>\n        <div className=\"button-area\">\n          <button className=\"jinsai-button pre\"></button>\n          <button className=\"jinsai-button next\"></button>\n        </div>\n      </div>\n      <div className=\"work-count\">{`${works.length - workCursor} / ${works.length}`}</div>\n      {works.map((work, index) => {\n        return (\n          <div className=\"work\" key={index}>\n            <div className=\"present\">{work.present?.name}</div>\n            <div className=\"target\">\n              {work.target.map(skill => {\n                return (\n                  <div key={skill}>{skill}</div>\n                )}\n              )}\n            </div>\n          </div>\n        )\n      })}\n      <div className=\"count-down\"></div>\n    </div>\n  )\n}","import React, { useReducer, useState } from 'react';\nimport './App.css';\nimport { Frame } from './Frame';\nimport { FindWork } from './FindWork';\nimport { CacheStateContext, useCacheState } from './contexts/CacheState';\nimport { Test } from './Test';\nimport { GameStateContext, useGameState } from './contexts/GameState';\n// import { GameState } from './contexts/GameState';\n\nfunction App() {\n  const {gameState, gameStateDispatch} = useGameState();\n  const {cacheState, cacheStateDispatch} = useCacheState();\n  return (\n    <CacheStateContext.Provider value={{cacheState, cacheStateDispatch}}>\n      <GameStateContext.Provider value={{gameState, gameStateDispatch}}>\n        <div className=\"App\">\n          {cacheState.page !== 'findwork' && <Frame></Frame>}\n          {cacheState.page === 'findwork' && <FindWork></FindWork>}\n        </div>\n      </GameStateContext.Provider>\n    </CacheStateContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { enableMapSet } from 'immer';\nenableMapSet()\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}